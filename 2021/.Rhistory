trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
pinvalid<-p%>%filter(personid %in% c('2120583201','2120739002','2120977101','2121524702','2122393002','2122397501','2122775802','2123092902','2123092904','2124914201','2125067801','2125404502','2125404503','2125404505','2125500103','2126430801','2126432901','2126435801','2126443201','2126444901','2126447101','2126447801','2126448501','2126453401','2126455001','2126455101','2126460901','2126462601','2126475001','2126476201','2126478801','2126481801','2126485701','2126487601','2126488701','2126492101','2126496101','2126496201','2126501001','2126501601','2126506901','2126509201','2126509801','2126510101','2126511201','2126512001','2126512301'))
pinvalid_w_hh<- merge(hh, pinvalid, by='hhid')
pinvalid<-p%>%filter(personid %in% c('2120583201','2120739002','2120977101','2121524702','2122393002','2122397501','2122775802','2123092902','2123092904','2124914201','2125067801','2125404502','2125404503','2125404505','2125500103','2126430801','2126432901','2126435801','2126443201','2126444901','2126447101','2126447801','2126448501','2126453401','2126455001','2126455101','2126460901','2126462601','2126475001','2126476201','2126478801','2126481801','2126485701','2126487601','2126488701','2126492101','2126496101','2126496201','2126501001','2126501601','2126506901','2126509201','2126509801','2126510101','2126511201','2126512001','2126512301'))
pinvalid_w_hh<- merge(h, pinvalid, by='hhid')
h
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_trips = n_distinct(tripid))
dataset_share = dataset_ct %>%
mutate(trips_share = round(n_trips/sum(n_trips)*100,1))
temp = dataset_share %>%
rename( "value" := !!col_name)
# mutate(value = !!col_name)
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "hhts_cleaning",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
pinvalid<-p%>%filter(personid %in% c('2120583201','2120739002','2120977101','2121524702','2122393002','2122397501','2122775802','2123092902','2123092904','2124914201','2125067801','2125404502','2125404503','2125404505','2125500103','2126430801','2126432901','2126435801','2126443201','2126444901','2126447101','2126447801','2126448501','2126453401','2126455001','2126455101','2126460901','2126462601','2126475001','2126476201','2126478801','2126481801','2126485701','2126487601','2126488701','2126492101','2126496101','2126496201','2126501001','2126501601','2126506901','2126509201','2126509801','2126510101','2126511201','2126512001','2126512301'))
pinvalid_w_hh<- merge(h, pinvalid, by='hhid')
for (var in colnames(pinvalid_w_hh)){
print(vars_summary(pinvalid_w_hh, var, var)
}
for (var in colnames(pinvalid_w_hh)){
print(vars_summary(pinvalid_w_hh, var, var) )
}
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
temp = dataset_share %>%
rename( "value" := !!col_name)
# mutate(value = !!col_name)
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "hhts_cleaning",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
for (var in colnames(pinvalid_w_hh)){
print(vars_summary(pinvalid_w_hh, var, var) )
}
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
temp = dataset_share
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "hhts_cleaning",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
temp = dataset_share
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "hhts_cleaning",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
for (var in colnames(pinvalid_w_hh)){
print(vars_summary(pinvalid_w_hh, var, var) )
}
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
print(dataset_ct)
print(dataset_share)
temp = dataset_share %>%
rename( "value" := !!col_name)
# mutate(value = !!col_name)
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "hhts_cleaning",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM HHSurvey.Household")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM HHSurvey.Day")
t <- dbGetQuery(elmer_connection,
"SELECT [recid]
,[survey_year]
,[hhid]
,[sample_source]
,[hhgroup]
,[nwkdays]
,[personid]
,[pernum]
,[daynum]
,[dayofweek]
,[traveldate]
,[data_source]
,[tripid]
,[tripnum]
,[travelers_total]
,[origin_purpose]
,[origin_purpose_cat]
,[dest_purpose]
,[dest_purpose_cat]
,[mode_1]
,[mode_type]
,[driver]
FROM HHSurvey.Trip")
for (var in colnames(pinvalid_w_hh)){
print(vars_summary(pinvalid_w_hh, var, var) )
}
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
print(dataset_ct)
print(dataset_sha)
temp = dataset_share %>%
rename( "value" := !!col_name)
# mutate(value = !!col_name)
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "HouseholdTravelSurvey2021",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM dbo.hts_hh")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_person")
pinvalid<-p%>%filter(personid %in% c('2120583201','2120739002','2120977101','2121524702','2122393002','2122397501','2122775802','2123092902','2123092904','2124914201','2125067801','2125404502','2125404503','2125404505','2125500103','2126430801','2126432901','2126435801','2126443201','2126444901','2126447101','2126447801','2126448501','2126453401','2126455001','2126455101','2126460901','2126462601','2126475001','2126476201','2126478801','2126481801','2126485701','2126487601','2126488701','2126492101','2126496101','2126496201','2126501001','2126501601','2126506901','2126509201','2126509801','2126510101','2126511201','2126512001','2126512301'))
pinvalid_w_hh<- merge(h, pinvalid, by='hhid')
pinvalid<-p%>%filter(personid %in% c(2120583201,2120739002,2120977101,2121524702,2122393002,2122397501,2122775802,2123092902,2123092904,2124914201,2125067801,2125404502,2125404503,2125404505,2125500103,2126430801,2126432901,2126435801,2126443201,2126444901,2126447101,2126447801,2126448501,2126453401,2126455001,2126455101,2126460901,2126462601,2126475001,2126476201,2126478801,2126481801,2126485701,2126487601,2126488701,2126492101,2126496101,2126496201,2126501001,2126501601,2126506901,2126509201,2126509801,2126510101,2126511201,2126512001,2126512301))
pinvalid_w_hh<- merge(h, pinvalid, by='hhid')
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
vars_summary = function(dataset,col_name,var_string){
col_name = enquo(col_name)
dataset_ct = dataset %>%
summarise (n_persons= n_distinct(personid))
dataset_share = dataset_ct %>%
mutate(persons_share = round(n_persons/sum(n_persons)*100,1))
print(dataset_ct)
print(dataset_sha)
temp = dataset_share %>%
rename( "value" := !!col_name)
# mutate(value = !!col_name)
var_label_table = as.data.frame(value_labels[value_labels$variable %in% c(var_string)] %>% mutate(value = as.double(value))) %>%
dplyr::select(value, value_label)
#browser()
temp = temp %>% left_join(var_label_table, by = "value") %>%
dplyr::select(-c(value)) %>%
relocate(value_label)
return(temp)
}
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "HouseholdTravelSurvey2021",
trusted_connection = "yes",
port = 1433)
h <- dbGetQuery(elmer_connection,
"SELECT [hhid],[hhsize],[vehicle_count],[numadults],[numchildren], [lifecycle], [hhincome_detailed] FROM dbo.hts_hh")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_person")
View(p)
# Update codebook path above & data input paths below if running outside of RSG!
options(scipen = 99)
options(knitr.kable.NA = '')
library(data.table)
library(knitr)
library(kableExtra)
library(readxl)
library(lubridate)
#library(RPostgres)
library(stringr)
library(ggplot2)
library(odbc)
library(DBI)
library(tidyverse)
source('C:/Users/schildress/Documents/GitHub/travel-survey-rsg-psrc-2021/rsg_qaqc/_crosstabs_functions.R')
# UPDATE folder path if running outside of RSG
# may also need to update file formats/read functions (e.g., read from a database)
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "HouseholdTravelSurvey2021",
trusted_connection = "yes")
h <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_hh")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_person")
d <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_day")
t <- dbGetQuery(elmer_connection,
"SELECT * FROM dbo.hts_trip")
View(p)
# UPDATE folder path if running outside of RSG
# may also need to update file formats/read functions (e.g., read from a database)
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "HouseholdTravelSurvey2021",
trusted_connection = "yes")
p <- dbGetQuery(elmer_connection,
"SELECT * FROM hhts_cleaning.Person")
View(p)
